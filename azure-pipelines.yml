
jobs:
- job: linux
  pool:
    vmImage: ubuntu-latest
  timeoutInMinutes: 360

  variables:
    CONFIG: linux_ppc64le_cuda_compiler_version11.2
    R_CONFIG: 
    ARROW_VERSION: 16.0.0.dev128
    UPLOAD_PACKAGES: False

  steps:
  - script: |
         sudo mkdir -p /opt/empty_dir || true
         for d in \
                  /opt/ghc \
                  /opt/hostedtoolcache \
                  /usr/lib/jvm \
                  /usr/local/.ghcup \
                  /usr/local/lib/android \
                  /usr/local/share/powershell \
                  /usr/share/dotnet \
                  /usr/share/swift \
                  ; do
           sudo rsync --stats -a --delete /opt/empty_dir/ $d || true
         done
         sudo apt-get purge -y -f firefox \
                                  google-chrome-stable \
                                  microsoft-edge-stable
         sudo apt-get autoremove -y >& /dev/null
         sudo apt-get autoclean -y >& /dev/null
         sudo docker image prune --all --force
         df -h
    displayName: Manage disk space

  # configure qemu binfmt-misc running.  This allows us to run docker containers
  # embedded qemu-static
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static:register --reset --credential yes
      ls /proc/sys/fs/binfmt_misc/
    displayName: Configure binfmt_misc
    condition: not(startsWith(variables['CONFIG'], 'linux_64'))

  - script: |
      git clone --no-checkout --branch main https://github.com/apache/arrow arrow
      git -C arrow checkout a03d957b5b8d0425f9d5b6c98b6ee1efa56a1248
      git -C arrow submodule update --init --recursive
    displayName: Clone arrow


  - task: CondaEnvironment@1
    inputs:
      packageSpecs: 'anaconda-client shyaml'
      installOptions: '-c conda-forge'
      updateConda: false

  - script: |
      mkdir build_artifacts
      CI=azure arrow/dev/tasks/conda-recipes/run_docker_build.sh $(pwd)/build_artifacts
    displayName: Run docker build

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.8'
  - script: pip install -e arrow/dev/archery[crossbow-upload]
    displayName: Install Crossbow
  - bash: |
      archery crossbow \
        --queue-path $(pwd) \
        --queue-remote https://github.com/ursacomputing/crossbow \
        upload-artifacts \
        --sha nightly-packaging-2024-02-16-0-azure-conda-linux-ppc64le-cuda-py3 \
        --tag nightly-packaging-2024-02-16-0-azure-conda-linux-ppc64le-cuda-py3 \
        "build_artifacts/*/*.conda"
    env:
      CROSSBOW_GITHUB_TOKEN: $(CROSSBOW_GITHUB_TOKEN)
    displayName: Upload packages as a GitHub release

  - task: CondaEnvironment@1
    inputs:
      packageSpecs: 'anaconda-client'
      installOptions: '-c conda-forge'
      updateConda: no
  - script: |
      conda install -y anaconda-client
      anaconda -t $(CROSSBOW_ANACONDA_TOKEN) upload --force build_artifacts/*/*.conda
    displayName: Upload packages to Anaconda
